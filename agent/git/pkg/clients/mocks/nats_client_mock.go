// Code generated by MockGen. DO NOT EDIT.
// Source: nats_client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/intelops/kubviz/model"
	nats "github.com/nats-io/nats.go"
)

// MockNATSClientInterface is a mock of NATSClientInterface interface.
type MockNATSClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockNATSClientInterfaceMockRecorder
}

// MockNATSClientInterfaceMockRecorder is the mock recorder for MockNATSClientInterface.
type MockNATSClientInterfaceMockRecorder struct {
	mock *MockNATSClientInterface
}

// NewMockNATSClientInterface creates a new mock instance.
func NewMockNATSClientInterface(ctrl *gomock.Controller) *MockNATSClientInterface {
	mock := &MockNATSClientInterface{ctrl: ctrl}
	mock.recorder = &MockNATSClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNATSClientInterface) EXPECT() *MockNATSClientInterfaceMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockNATSClientInterface) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockNATSClientInterfaceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockNATSClientInterface)(nil).Close))
}

// CreateStream mocks base method.
func (m *MockNATSClientInterface) CreateStream() (nats.JetStreamContext, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStream")
	ret0, _ := ret[0].(nats.JetStreamContext)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStream indicates an expected call of CreateStream.
func (mr *MockNATSClientInterfaceMockRecorder) CreateStream() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStream", reflect.TypeOf((*MockNATSClientInterface)(nil).CreateStream))
}

// Publish mocks base method.
func (m *MockNATSClientInterface) Publish(metric []byte, repo string, eventkey model.EventKey, eventvalue model.EventValue) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", metric, repo, eventkey, eventvalue)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish.
func (mr *MockNATSClientInterfaceMockRecorder) Publish(metric, repo, eventkey, eventvalue interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockNATSClientInterface)(nil).Publish), metric, repo, eventkey, eventvalue)
}
