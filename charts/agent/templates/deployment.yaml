apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agent.fullname" . }}
  labels:
    {{- include "agent.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          env:
          - name: CLUSTER_NAME
            value: {{ .Values.clusterName }}
          - name: NATS_TOKEN
            {{- if .Values.nats.auth.token }}
            value: {{ .Values.nats.auth.token }}
            {{- else if .Values.nats.auth.secret }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.nats.auth.secret.name }}
                key: {{ .Values.nats.auth.secret.key }}
            {{- end }}
          - name: NATS_ADDRESS
            value: {{ .Values.nats.host }}
          - name: SCHEDULING_INTERVAL
            value: "{{ .Values.schedule.schedulingInterval }}"
          - name: SCHEDULER_ENABLE
            value: "{{ .Values.schedule.enabled }}"
          - name: OUTDATED_INTERVAL
            value: "{{ .Values.schedule.outdatedInterval }}"
          - name: GETALL_INTERVAL
            value: "{{ .Values.schedule.getallInterval }}"
          - name: KUBESCORE_INTERVAL
            value: "{{ .Values.schedule.kubescoreInterval }}"
          - name: RAKKESS_INTERVAL
            value: "{{ .Values.schedule.rakkessInterval }}"
          - name: KUBEPREUPGRADE_INTERVAL
            value: "{{ .Values.schedule.kubepreupgradeInterval }}"
          - name: TRIVY_INTERVAL
            value: "{{ .Values.schedule.trivyInterval }}"
          {{- if .Values.persistence.enabled }}  
          volumeMounts:
          - name: data
            mountPath: {{ .Values.persistence.mountPath }}
          {{- end }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
              {{- if not .Values.persistence.enabled }}
              ephemeral-storage: {{ .Values.resources.limits.ephemeralstorage }}
              {{- end }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
              {{- if not .Values.persistence.enabled }}
              ephemeral-storage: {{ .Values.resources.requests.ephemeralstorage }}
              {{- end }}
{{- if .Values.git_bridge.enabled }}
        - name: git-bridge
          image: "{{ .Values.git_bridge.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container_bridge.image.pullPolicy }}
          ports:
            - name: http-git
              containerPort: 8081
              protocol: TCP
          env:
          - name: CLUSTER_NAME
            value: {{ .Values.clusterName }}
          - name: NATS_TOKEN
            {{- if .Values.nats.auth.token }}
            value: {{ .Values.nats.auth.token }}
            {{- else if .Values.nats.auth.secret }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.nats.auth.secret.name }}
                key: {{ .Values.nats.auth.secret.key }}
            {{- end }}
          - name: NATS_ADDRESS
            value: {{ .Values.nats.host }}
          {{- if .Values.git_bridge.persistence.enabled }}  
          volumeMounts:
          - name: data
            mountPath: {{ .Values.git_bridge.persistence.mountPath }}
          {{- end }}
          resources:
            limits:
              cpu: {{ .Values.git_bridge.resources.limits.cpu }}
              memory: {{ .Values.git_bridge.resources.limits.memory }}
              {{- if not .Values.git_bridge.persistence.enabled }}
              ephemeral-storage: {{ .Values.git_bridge.resources.limits.ephemeralstorage }}
              {{- end }}
            requests:
              cpu: {{ .Values.git_bridge.resources.requests.cpu }}
              memory: {{ .Values.git_bridge.resources.requests.memory }}
              {{- if not .Values.git_bridge.persistence.enabled }}
              ephemeral-storage: {{ .Values.git_bridge.resources.requests.ephemeralstorage }}
              {{- end }}
{{- end }}
{{- if .Values.container_bridge.enabled }}
        - name: container-bridge
          image: "{{ .Values.container_bridge.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container_bridge.image.pullPolicy }}
          ports:
            - name: http-container
              containerPort: 8082
              protocol: TCP
          env:
          - name: CLUSTER_NAME
            value: {{ .Values.clusterName }}
          - name: NATS_TOKEN
            {{- if .Values.nats.auth.token }}
            value: {{ .Values.nats.auth.token }}
            {{- else if .Values.nats.auth.secret }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.nats.auth.secret.name }}
                key: {{ .Values.nats.auth.secret.key }}
            {{- end }}
          - name: NATS_ADDRESS
            value: {{ .Values.nats.host }}
          {{- if .Values.container_bridge.persistence.enabled }}  
          volumeMounts:
          - name: data
            mountPath: {{ .Values.container_bridge.persistence.mountPath }}
          {{- end }}
          resources:
            limits:
              cpu: {{ .Values.container_bridge.resources.limits.cpu }}
              memory: {{ .Values.container_bridge.resources.limits.memory }}
              {{- if not .Values.container_bridge.persistence.enabled }}
              ephemeral-storage: {{ .Values.container_bridge.resources.limits.ephemeralstorage }}
              {{- end }}
            requests:
              cpu: {{ .Values.container_bridge.resources.requests.cpu }}
              memory: {{ .Values.container_bridge.resources.requests.memory }}
              {{- if not .Values.container_bridge.persistence.enabled }}
              ephemeral-storage: {{ .Values.container_bridge.resources.requests.ephemeralstorage }}
              {{- end }}
{{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "agent.fullname" . }}-data
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
