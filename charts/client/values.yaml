# Default values for client.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/intelops/kubviz/client
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.1.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

nats:
  enabled: true
  #Authentication setup
  auth:
    enabled: true
    # Use token if you want to provide the token via Helm Values
    token: ""
    # Use a secret reference if you want to get a token from a secret
    # secret:
    #   name: ""
    #   key: ""
  nats:
    jetstream:
      enabled: true

clickhouse:
  enabled: true
  clickhouse:
    replicas: "1"

grafana:
  enabled: false
  plugins:
  - vertamedia-clickhouse-datasource
  - grafana-clickhouse-datasource
  - volkovlabs-echarts-panel
  grafana.ini:
    database:
      enabled: true
      type: postgres
      host: kubviz-client-postgresql.kubviz.svc.cluster.local:5432
      name: tracetest
      ssl_mode: disable
      user: tracetest
      password: $__file{/etc/secrets/postgresql/postgres-password}
      #ssl_mode = require
  extraSecretMounts: 
  - name: my-postgresql-mount 
    mountPath: /etc/secrets/postgresql
    secretName: kubviz-client-postgresql
    readOnly: true

dashboards:
  enabled: true
  label: grafana_dashboard
  labelValue: "1"

datasources:
  enabled: true
  label: grafana_datasource
  labelValue: "1"
  uid: vertamedia-clickhouse-datasource

migration:
  enabled: true
  image:
    repository: ghcr.io/intelops/kubviz/migration
    pullPolicy: Always
    tag: "v1.1.3"
  schema:
    path: "/sql"
